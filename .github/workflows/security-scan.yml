name: Security Scanning Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Build with Maven
      run: mvn clean install -DskipTests

    # SonarQube SAST scan
    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=your-project-key \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=$SONAR_TOKEN

    # OWASP Dependency Check (SCA) - Dependency vulnerability scan
    - name: Dependency Check Scan
      uses: dependency-check/dependency-check-action@v2
      with:
        scan-path: './'  # scan current directory (your Maven project)
        format: 'ALL'
        fail-on-vulnerabilities: true

    # Build Docker image (if you have a Dockerfile in repo)
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.IMAGE_NAME }} .

    # Scan Docker Image with Trivy
    - name: Scan Docker Image with Trivy
      uses: aquasecurity/trivy-action@v0.10.0
      with:
        image-ref: ${{ secrets.IMAGE_NAME }}
        format: 'table'
        exit-code: 1  # fail if vulnerabilities found
